import time

# Define a decorator function to log the time taken by a function
def log_time(func):
    def wrapper(*args, **kwargs):
        print('-----------args',args)
        print('----------------kwargs',kwargs)
        start_time = time.time()
        result = func(*args, **kwargs)
        print('result:---------',result)
        end_time = time.time()
        print(f"Function '{func.__name__}' took {end_time - start_time} seconds to execute.")
        return result
    return wrapper

# Apply the decorator to a function
@log_time
def calculate_sum(n):
    sum = 0
    for i in range(1, n+1):
        sum += i
    return sum

# Call the decorated function
result = calculate_sum(1000000)
print("Result:", result)


output:
-----------args (1000000,)
----------------kwargs {}
result:--------- 500000500000
Function 'calculate_sum' took 0.030759811401367188 seconds to execute.
Result: 500000500000
